import * as THREE from 'three';
export declare enum PointerEventState {
    Idle = 0,
    Down = 1,
    Up = 2
}
export declare enum PointerEventViewportState {
    Idle = 0,
    Enter = 1,
    Leave = 2
}
export declare const DefaultPointerData: {
    state: PointerEventState;
    stateFrame: PointerEventState;
    button: number;
    viewportState: PointerEventViewportState;
    viewportStateFrame: PointerEventViewportState;
    x: number;
    y: number;
};
export declare class RendererDOM {
    renderer: any;
    private _keyboardTexture;
    private _onPointerMoveBind;
    private _onPointerDownBind;
    private _onPointerUpBind;
    private _onPointerEnterBind;
    private _onPointerLeaveBind;
    private _onKeyDownBind;
    private _onKeyUpBind;
    constructor(renderer: THREE.Renderer);
    dispose(): void;
    private onPointerMove;
    private onPointerDown;
    private onPointerUp;
    private onPointerEnter;
    private onPointerLeave;
    private onKeyDown;
    private onKeyUp;
}
export declare const getFullURL: (url: string) => string;
export declare const getAssetURL: (graphUrl: string, assetId: string) => string;
export declare const generateUniforms: (graph: string, currentUniforms: any, uniforms: {
    name: string;
    type: string;
    value: any;
}[], parameters?: Record<string, any>) => any;
export declare const getUniformValue: (graph: string, type: string, value: any) => any;
export declare const initThree: () => void;
export declare const initReactThreeFiber: () => void;
export declare const materialUpdate: (frame: any, uniforms: any) => void;
