/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from "react";
import { useGLTF, useAnimations, useScroll } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { LoopOnce } from "three";


export function CharacterModel_2(props) {


  const { animation } = props;

  const group = useRef();

  const { nodes, materials, animations } = useGLTF(
    "/character_model_rig_v03.glb"
  );
  const { actions } = useAnimations(animations, group);

  useEffect(() => {

    actions.Falling_meditating_anim.setLoop(LoopOnce);
    actions.Falling_meditating_anim.clampWhenFinished = true;

  })

  useEffect(() => {
    actions[animation].reset().fadeIn(0.5).play();

    return () => {
      actions[animation].fadeOut(0.5);
    }

  }, [animation])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group
          name="Armature"
          position={[-0.598, 0.044, 0.072]}
          rotation={[Math.PI, 0, Math.PI]}
        >
          <skinnedMesh
            name="main_char_1_baked001"
            geometry={nodes.main_char_1_baked001.geometry}
            material={materials["Material.003"]}
            skeleton={nodes.main_char_1_baked001.skeleton}
            morphTargetDictionary={
              nodes.main_char_1_baked001.morphTargetDictionary
            }
            morphTargetInfluences={
              nodes.main_char_1_baked001.morphTargetInfluences
            }
          />
          <primitive object={nodes.mixamorigHips} />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/character_model_rig_v03.glb");
